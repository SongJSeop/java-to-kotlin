package com.lannstark.lec01

// Lec01. 코틀린에서 변수를 다루는 방법

// kotlin에서는 함수를 나타낼때 fun을 사용한다.
fun main() {

    // 코틀린에서는 자바에서 처럼 한 줄마다 ;를 붙이지 않아도 됨

    // 코틀린에서 변수는 앞에 'var'
    var number1 = 10L

    // 바꿀 수 없는 변수(상수)는 앞에 'val'
    val number2 = 10L

    // 코틀린에서는 의무적으로 타입을 작성하지는 않아도 됨
    // 원한다면 아래와 같이 타입 작성 가능
    // var number1: Long = 10L
    // val number2: Long = 10L
    // 여기서 자바에서는 기본형 long과 참조형 Long이 다르지만 코틀린에서는 Long으로 통일
    // 코틀린이 알아서 상황에 따라 내부적으로 기본형으로 바꿔서 사용해주기도 함
    var number3: Long? = null  // 변수에 null이 들어갈 수 있다면 타입 뒤에 ?를 붙여줘야 함

    // 변수를 초기화하지 않고 선언만 하려면 이렇게 타입을 작성해주어야 함
    var number4: Long
//    println(number3)  // 초기화 되지 않은 상태로는 사용 불가
    val number5: Long  // 상수도 초기화 하지 않고 선언 가능
    number5 = 10  // 상수지만 최초 한 번은 값을 넣어줄 수 있음
    // 그러나 권장 사항은 val은 선언과 초기화를 함께 사용하는 것

    // 어떠한 컬렉션이 상수라면 수정은 못해도 요소 자체를 추가해줄 수는 있음

    // 모든 변수는 우선 val로 만들고 꼭 필요한 경우 var로 변경하는 것을 추천


    // 코틀린에서는 객체 인스턴스화를 할 때 new를 사용해주지 않음
    var person = Person("송준섭")


    /* 요약
    1. 모든 변수는 var / val을 붙여주어야 한다.
      - var: 변경 가능 / val: 변경 불가(상수)
    2. 타입을 명시적으로 작성하지 않아도, 타입이 추론된다.
    3. 기본형(Primitive Type)과 참조형(Reference Type)을 구분하지 않아도 된다.
    4. null이 들어갈 수 있는 변수는 타입 뒤에 ?를 붙여주어야 한다.
      - 이 경우 아예 다른 타입으로 간주된다.
    5. 객체를 인스턴스화 할 때 new를 붙이지 않아야 한다.
     */
}